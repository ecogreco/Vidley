@model IEnumerable<Vidley.Models.Customer>
@*
    Note: I've set the model for this view to IEnumerable<Customer>.
    This is a simple interface implemented by the list class. Since
    in this view we only want to iterate over this list, and we don't
    need any of the operations in the List class (eg Add, Remove, etc),
    it's better to use the IEnumerable interface, which allows use to
    iterate over the list. If in the future, we replace the List with a
    different data structure, as long as it is enumerable, our view code
    will remain unchanged.
*@

@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

    <table id="customers" class="table table-bordered table-hover" >
        <thead>
            <tr>
                <th>Customer</th>
                <th>Membership Type</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>


@section Scripts
    {
    
    <script>
        $(document).ready(function () {
            $("#customers").DataTable //method that creates table, the parameter is the customers table"#TableName"
            ({
                ajax:// pulls in the API methods
                {
                    url: "/api/customers",
                    dataSrc:""
                },
                columns:
                [
                        //first column
                    {
                        data: "name", //pulls in the column in the customers table "ColumnName"
                        render: function (data, type, customer) //uses the data object which is the column name in the data tables 
                        {
                            return "<a href = '/customers/edit/" + customer.id + "' >" + customer.name + "</a>"; //returns a hyper link to the 'customers/edit page'
                        }
                    },

                //second column
                    {
                        data:"membershipType.name"                    
                    },

                    //third columnn
                    {
                        data: "id",
                        render: function (data)
                        {
                            return "<button class = 'btn-link js-delete' data-customer-id=" +data+">Delete</button>"; //returns a button 
                        }
                    }
                ]

            });

            var table = $("#customers").on("click", ".js-delete", function ()
            {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete this customer", function (result)
                {
                    if (result)
                    {
                        $.ajax
                        ({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function ()
                            {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });

        });
    </script>

    }



@*
        @model Vidley.


    @{
        ViewBag.Title = "Customers";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }


    <h2>Customers</h2>

    @{
        var count = Model;
    }

    @if(count <= 0)
    {
        <h3>There are currently no customers yet</h3>
    }

    else
    {
        <table class="table table-bordered table-hover">
            <tr>
                <td>Customer</td>
            </tr>
            @foreach (var customer in @Model)
            {
                <tr><td> @Html.ActionLink(customer.Name, "Details/" + customer.Id, "Customers")</td></tr>
            }
        </table>
    }


    @*
            <ul>
            @foreach (var customer in Model.CustomerList)
            {
                <li>@Html.ActionLink(customer.Name, "Details/"+customer.Id, "Customers")</li>

            }

        </ul>
*@




